# NOTE: This file is auto generated by OpenAPI Generator 7.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule APIBL.Model.PlayerContextExtension do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :context,
    :pp,
    :accPp,
    :techPp,
    :passPp,
    :rank,
    :country,
    :countryRank,
    :lastWeekPp,
    :lastWeekRank,
    :lastWeekCountryRank,
    :playerId,
    :player,
    :scoreStats,
    :banned,
    :name
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :context => APIBL.Model.LeaderboardContexts.t | nil,
    :pp => float() | nil,
    :accPp => float() | nil,
    :techPp => float() | nil,
    :passPp => float() | nil,
    :rank => integer() | nil,
    :country => String.t | nil,
    :countryRank => integer() | nil,
    :lastWeekPp => float() | nil,
    :lastWeekRank => integer() | nil,
    :lastWeekCountryRank => integer() | nil,
    :playerId => String.t | nil,
    :player => APIBL.Model.Player.t | nil,
    :scoreStats => APIBL.Model.PlayerScoreStats.t | nil,
    :banned => boolean() | nil,
    :name => String.t | nil
  }

  alias APIBL.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:context, :struct, APIBL.Model.LeaderboardContexts)
     |> Deserializer.deserialize(:player, :struct, APIBL.Model.Player)
     |> Deserializer.deserialize(:scoreStats, :struct, APIBL.Model.PlayerScoreStats)
  end
end

