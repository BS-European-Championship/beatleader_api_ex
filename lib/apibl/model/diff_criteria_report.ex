# NOTE: This file is auto generated by OpenAPI Generator 7.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule APIBL.Model.DiffCriteriaReport do
  @moduledoc """
  Basic evaluation info holder struct
  """

  @derive Jason.Encoder
  defstruct [
    :modsRequired,
    :noteHotStarts,
    :wallHotStarts,
    :noteColdEnds,
    :wallColdEnds,
    :noteIntersections,
    :wallIntersections,
    :noteOutOfRange,
    :wallOutOfRange,
    :noteFailSwings,
    :errors
  ]

  @type t :: %__MODULE__{
    :modsRequired => [String.t] | nil,
    :noteHotStarts => [APIBL.Model.MapNote.t] | nil,
    :wallHotStarts => [APIBL.Model.MapObstacle.t] | nil,
    :noteColdEnds => [APIBL.Model.MapNote.t] | nil,
    :wallColdEnds => [APIBL.Model.MapObstacle.t] | nil,
    :noteIntersections => [APIBL.Model.MapNote.t] | nil,
    :wallIntersections => [APIBL.Model.MapObstacle.t] | nil,
    :noteOutOfRange => [APIBL.Model.MapNote.t] | nil,
    :wallOutOfRange => [APIBL.Model.MapObstacle.t] | nil,
    :noteFailSwings => [APIBL.Model.MapNote.t] | nil,
    :errors => [integer()] | nil
  }

  alias APIBL.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:noteHotStarts, :list, APIBL.Model.MapNote)
     |> Deserializer.deserialize(:wallHotStarts, :list, APIBL.Model.MapObstacle)
     |> Deserializer.deserialize(:noteColdEnds, :list, APIBL.Model.MapNote)
     |> Deserializer.deserialize(:wallColdEnds, :list, APIBL.Model.MapObstacle)
     |> Deserializer.deserialize(:noteIntersections, :list, APIBL.Model.MapNote)
     |> Deserializer.deserialize(:wallIntersections, :list, APIBL.Model.MapObstacle)
     |> Deserializer.deserialize(:noteOutOfRange, :list, APIBL.Model.MapNote)
     |> Deserializer.deserialize(:wallOutOfRange, :list, APIBL.Model.MapObstacle)
     |> Deserializer.deserialize(:noteFailSwings, :list, APIBL.Model.MapNote)
  end
end

