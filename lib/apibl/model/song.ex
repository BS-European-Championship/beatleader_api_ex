# NOTE: This file is auto generated by OpenAPI Generator 7.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule APIBL.Model.Song do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :hash,
    :name,
    :subName,
    :author,
    :mapper,
    :mapperId,
    :collaboratorIds,
    :coverImage,
    :fullCoverImage,
    :downloadUrl,
    :bpm,
    :duration,
    :tags,
    :uploadTime,
    :difficulties,
    :externalStatuses
  ]

  @type t :: %__MODULE__{
    :id => String.t | nil,
    :hash => String.t | nil,
    :name => String.t | nil,
    :subName => String.t | nil,
    :author => String.t | nil,
    :mapper => String.t | nil,
    :mapperId => integer() | nil,
    :collaboratorIds => String.t | nil,
    :coverImage => String.t | nil,
    :fullCoverImage => String.t | nil,
    :downloadUrl => String.t | nil,
    :bpm => float() | nil,
    :duration => float() | nil,
    :tags => String.t | nil,
    :uploadTime => integer() | nil,
    :difficulties => [APIBL.Model.DifficultyDescription.t] | nil,
    :externalStatuses => [APIBL.Model.ExternalStatus.t] | nil
  }

  alias APIBL.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:difficulties, :list, APIBL.Model.DifficultyDescription)
     |> Deserializer.deserialize(:externalStatuses, :list, APIBL.Model.ExternalStatus)
  end
end

