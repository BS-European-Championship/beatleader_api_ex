# NOTE: This file is auto generated by OpenAPI Generator 7.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule APIBL.Model.Score do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :baseScore,
    :modifiedScore,
    :accuracy,
    :playerId,
    :pp,
    :bonusPp,
    :passPP,
    :accPP,
    :techPP,
    :qualification,
    :weight,
    :rank,
    :countryRank,
    :replay,
    :modifiers,
    :badCuts,
    :missedNotes,
    :bombCuts,
    :wallsHit,
    :pauses,
    :fullCombo,
    :maxCombo,
    :fcAccuracy,
    :fcPp,
    :hmd,
    :controller,
    :accRight,
    :accLeft,
    :timeset,
    :timepost,
    :platform,
    :player,
    :validContexts,
    :contextExtensions,
    :leaderboardId,
    :leaderboard,
    :authorizedReplayWatched,
    :anonimusReplayWatched,
    :replayOffsetsId,
    :replayOffsets,
    :country,
    :maxStreak,
    :playCount,
    :leftTiming,
    :rightTiming,
    :priority,
    :scoreImprovementId,
    :scoreImprovement,
    :banned,
    :suspicious,
    :bot,
    :ignoreForStats,
    :migrated,
    :rankVoting,
    :metadata
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :baseScore => integer() | nil,
    :modifiedScore => integer() | nil,
    :accuracy => float() | nil,
    :playerId => String.t | nil,
    :pp => float() | nil,
    :bonusPp => float() | nil,
    :passPP => float() | nil,
    :accPP => float() | nil,
    :techPP => float() | nil,
    :qualification => boolean() | nil,
    :weight => float() | nil,
    :rank => integer() | nil,
    :countryRank => integer() | nil,
    :replay => String.t | nil,
    :modifiers => String.t | nil,
    :badCuts => integer() | nil,
    :missedNotes => integer() | nil,
    :bombCuts => integer() | nil,
    :wallsHit => integer() | nil,
    :pauses => integer() | nil,
    :fullCombo => boolean() | nil,
    :maxCombo => integer() | nil,
    :fcAccuracy => float() | nil,
    :fcPp => float() | nil,
    :hmd => APIBL.Model.Hmd.t | nil,
    :controller => APIBL.Model.ControllerEnum.t | nil,
    :accRight => float() | nil,
    :accLeft => float() | nil,
    :timeset => String.t | nil,
    :timepost => integer() | nil,
    :platform => String.t | nil,
    :player => APIBL.Model.Player.t | nil,
    :validContexts => APIBL.Model.LeaderboardContexts.t | nil,
    :contextExtensions => [APIBL.Model.ScoreContextExtension.t] | nil,
    :leaderboardId => String.t | nil,
    :leaderboard => APIBL.Model.Leaderboard.t | nil,
    :authorizedReplayWatched => integer() | nil,
    :anonimusReplayWatched => integer() | nil,
    :replayOffsetsId => integer() | nil,
    :replayOffsets => APIBL.Model.ReplayOffsets.t | nil,
    :country => String.t | nil,
    :maxStreak => integer() | nil,
    :playCount => integer() | nil,
    :leftTiming => float() | nil,
    :rightTiming => float() | nil,
    :priority => integer() | nil,
    :scoreImprovementId => integer() | nil,
    :scoreImprovement => APIBL.Model.ScoreImprovement.t | nil,
    :banned => boolean() | nil,
    :suspicious => boolean() | nil,
    :bot => boolean() | nil,
    :ignoreForStats => boolean() | nil,
    :migrated => boolean() | nil,
    :rankVoting => APIBL.Model.RankVoting.t | nil,
    :metadata => APIBL.Model.ScoreMetadata.t | nil
  }

  alias APIBL.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:hmd, :struct, APIBL.Model.Hmd)
     |> Deserializer.deserialize(:controller, :struct, APIBL.Model.ControllerEnum)
     |> Deserializer.deserialize(:player, :struct, APIBL.Model.Player)
     |> Deserializer.deserialize(:validContexts, :struct, APIBL.Model.LeaderboardContexts)
     |> Deserializer.deserialize(:contextExtensions, :list, APIBL.Model.ScoreContextExtension)
     |> Deserializer.deserialize(:leaderboard, :struct, APIBL.Model.Leaderboard)
     |> Deserializer.deserialize(:replayOffsets, :struct, APIBL.Model.ReplayOffsets)
     |> Deserializer.deserialize(:scoreImprovement, :struct, APIBL.Model.ScoreImprovement)
     |> Deserializer.deserialize(:rankVoting, :struct, APIBL.Model.RankVoting)
     |> Deserializer.deserialize(:metadata, :struct, APIBL.Model.ScoreMetadata)
  end
end

