# NOTE: This file is auto generated by OpenAPI Generator 7.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule APIBL.Model.ScoreResponseWithDifficulty do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :baseScore,
    :modifiedScore,
    :accuracy,
    :playerId,
    :pp,
    :bonusPp,
    :passPP,
    :accPP,
    :techPP,
    :rank,
    :country,
    :fcAccuracy,
    :fcPp,
    :weight,
    :replay,
    :modifiers,
    :badCuts,
    :missedNotes,
    :bombCuts,
    :wallsHit,
    :pauses,
    :fullCombo,
    :platform,
    :maxCombo,
    :maxStreak,
    :hmd,
    :controller,
    :leaderboardId,
    :timeset,
    :timepost,
    :replaysWatched,
    :playCount,
    :priority,
    :player,
    :scoreImprovement,
    :rankVoting,
    :metadata,
    :offsets,
    :difficulty,
    :song
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :baseScore => integer() | nil,
    :modifiedScore => integer() | nil,
    :accuracy => float() | nil,
    :playerId => String.t | nil,
    :pp => float() | nil,
    :bonusPp => float() | nil,
    :passPP => float() | nil,
    :accPP => float() | nil,
    :techPP => float() | nil,
    :rank => integer() | nil,
    :country => String.t | nil,
    :fcAccuracy => float() | nil,
    :fcPp => float() | nil,
    :weight => float() | nil,
    :replay => String.t | nil,
    :modifiers => String.t | nil,
    :badCuts => integer() | nil,
    :missedNotes => integer() | nil,
    :bombCuts => integer() | nil,
    :wallsHit => integer() | nil,
    :pauses => integer() | nil,
    :fullCombo => boolean() | nil,
    :platform => String.t | nil,
    :maxCombo => integer() | nil,
    :maxStreak => integer() | nil,
    :hmd => APIBL.Model.Hmd.t | nil,
    :controller => APIBL.Model.ControllerEnum.t | nil,
    :leaderboardId => String.t | nil,
    :timeset => String.t | nil,
    :timepost => integer() | nil,
    :replaysWatched => integer() | nil,
    :playCount => integer() | nil,
    :priority => integer() | nil,
    :player => APIBL.Model.PlayerResponse.t | nil,
    :scoreImprovement => APIBL.Model.ScoreImprovement.t | nil,
    :rankVoting => APIBL.Model.RankVoting.t | nil,
    :metadata => APIBL.Model.ScoreMetadata.t | nil,
    :offsets => APIBL.Model.ReplayOffsets.t | nil,
    :difficulty => APIBL.Model.DifficultyDescription.t | nil,
    :song => APIBL.Model.ScoreSongResponse.t | nil
  }

  alias APIBL.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:hmd, :struct, APIBL.Model.Hmd)
     |> Deserializer.deserialize(:controller, :struct, APIBL.Model.ControllerEnum)
     |> Deserializer.deserialize(:player, :struct, APIBL.Model.PlayerResponse)
     |> Deserializer.deserialize(:scoreImprovement, :struct, APIBL.Model.ScoreImprovement)
     |> Deserializer.deserialize(:rankVoting, :struct, APIBL.Model.RankVoting)
     |> Deserializer.deserialize(:metadata, :struct, APIBL.Model.ScoreMetadata)
     |> Deserializer.deserialize(:offsets, :struct, APIBL.Model.ReplayOffsets)
     |> Deserializer.deserialize(:difficulty, :struct, APIBL.Model.DifficultyDescription)
     |> Deserializer.deserialize(:song, :struct, APIBL.Model.ScoreSongResponse)
  end
end

